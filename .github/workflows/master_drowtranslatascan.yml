# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core project to Azure Function App - drowtranslatascan

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Generate SQLite Database'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/Data'
          # Remove the old database if it exists
          rm -f drow_dictionary.db
          
          # Create the new SQLite database and import the CSV
          sqlite3 drow_dictionary.db <<EOF
          CREATE TABLE drow_dictionary (
            Drow   TEXT NOT NULL,
            Common TEXT NOT NULL,
            Notes  TEXT
          );
          .mode csv
          .import drow_dictionary.csv drow_dictionary
          EOF
          popd
          
      - name: 'Check if SQLite Database Exists'
        run: |
          if [ ! -f './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/Data/drow_dictionary.db' ]; then
            echo "Error: drow_dictionary.db does not exist. Failing the build."
            exit 1
          fi
          
      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'drowtranslatascan'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_008E41BB37364248AB4CB87C58D3BDC9 }}
